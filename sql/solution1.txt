1. Define Database.
A database is an organized collection of structured data that can be stored, easily accessed, managed, and retrieved digitally from a remote or local computer system. Databases can be complex and vast and are built with a fixed design and modeling approach. While smaller databases can be stored on a file system, large ones are hosted on computer clusters or cloud storage.

2. What is the difference between DBMS and RDBMS?


3. What is SQL?
SQL stands for Structured Query Language. It is the standard language for RDBMS and is useful in handling organized data with entities or variables with relations between them. SQL is used for communicating with databases.



4. What is normalization and what are its types?
Normalization is used to reduce data redundancy and dependency by organizing fields and tables in databases. It involves constructing tables and setting up relationships between those tables according to certain rules. The redundancy and inconsistent dependency can be removed using these rules to make normalization more flexible.

The different forms of normalization are as follows: 

First Normal Form: If every attribute in a relation is single-valued, then it is in the first normal form. If it contains a composite or multi-valued attribute, it violates the first normal form.
Second Normal Form: A relation is said to be in the second normal form if it has met the conditions for the first normal form and does not have any partial dependency, i.e., it does not have a non-prime attribute that relies on any proper subset of any candidate key of the table. Often, the solution to this problem is to specify a single-column primary key.
Third Normal Form: A relation is in the third normal form when it meets the conditions for the second normal form and there is not any transitive dependency between the non-prime attributes, i.e., all the non-prime attributes are decided only by the candidate keys of the relation and not by other non-prime attributes.
Boyce-Codd Normal Form: A relation is in the Boyce-Codd normal form or BCNF if it meets the conditions of the third normal form, and for every functional dependency, the left-hand side is a super key. A relation is in BCNF if and only if X is a super key for every non-trivial functional dependency in form X –> Y.

5. What is denormalization?
Denormalization is the opposite of normalization; redundant data is added to speed up complex queries that have multiple tables that need to be joined. Optimization of the read performance of a database is attempted by adding or grouping redundant copies of data.

6. What are Joins in SQL?
JOINS in SQL is used to combine rows from two or more tables based on a related column between them. Various types of JOINS can be used to retrieve data, depending on the relationship between tables.

There are four types of Joins:

Inner Join
Left Join
Right Join
Full Join

7. Explain the types of SQL joins.
Types of SQL Joins
There are four different types of SQL Joins:

(Inner) Join: An inner join is used to retrieve the records that have matching values in tables involved in the join. It combines rows from two tables based on a related column and returns only the matching record. Inner Join is mostly used to join queries.
SELECT *
FROM Table_A
JOIN Table_B;
SELECT *
FROM Table_A
INNER JOIN Table_B;
 

Left (Outer) Join: The use of left join is to retrieve all the records or rows from the left and the matched ones from the right.
SELECT *
FROM Table_A A
LEFT JOIN Table_B B
ON A.col = B.col;
 

Right (Outer) Join: The use of Right join is to retrieve all the records or rows from the right and the matched ones from the left.
SELECT *
FROM Table_A A
RIGHT JOIN Table_B B
ON A.col = B.col;
 

Full (Outer) Join: The use of Full join is to retrieve the records that have a match either in the left table or the right table.
SELECT *
FROM Table_A A
FULL JOIN Table_B B
ON A.col = B.col;
Ace your next SQL interview with our expert-written SQL Join Interview Questions.


8. What are the subsets of SQL?


9. What are the applications of SQL?

10. What is a DEFAULT constraint?


11. What is a UNIQUE constraint?

12. What is meant by table and field in SQL?


13. What is a primary key?

14. What is a unique key?

15. What is the difference between a primary key and a unique key?


16. What is a foreign key?

17. What are the benefits of SQL database over NoSQL database?

18. Explain the different types of SQL commands.


19. What are the uses of SQL?

20. What is an index?

21. Explain the types of indexes.

22. What are entities and relationships?

23. What are SQL operators?

24. What do you mean by data integrity?


25. What is a data warehouse?


26. How would you find the second highest salary from the following table?



27. Why is the FLOOR function used in SQL Server?


28. State the differences between clustered and non-clustered indexes

29. What do you know about CDC in SQL Server?


30. What is the difference between SQL and MySQL?

32. What is the ACID property in a database?

33. What is the need for group functions in SQL?

34. What do you understand about a character manipulation function?

35. What is AUTO_INCREMENT?


36. What is the difference between the DELETE and TRUNCATE commands?


37. What is the difference between the DROP and TRUNCATE commands?


38. What is a “TRIGGER” in SQL?

39. Where are usernames and passwords stored in SQL Server?
In SQL Server, usernames and passwords are stored in the main database in the sysxlogins table.

40. What are the types of relationships in SQL Server databases?

41. What are the third-party tools that are used in SQL Server?

42. How can you handle expectations in SQL Server?


43. How many authentication modes are there in SQL Server? What are they?

44. What is a function in SQL Server?

45. Mention different types of replication in SQL Server?

46. Which command is used to find out the SQL Server version?

47. What is the COALESCE function?

48. Can we link SQL Server with others?


49. What is SQL Server Agent?

50. What do you know about magic tables in SQL Server?


51. What are some common clauses used with SELECT queries in SQL?

52. What is wrong with the following SQL query?


53. What do you know about the stuff() function?

54. What are views? Give an example.

55. What are the types of views in SQL?

56. What is a stored procedure? Give an example.

57. Explain Inner Join with an example.


58. State the differences between views and tables.

59. What do you understand about a temporary table? Write a query to create a temporary table



60. Explain the difference between OLTP and OLAP.

61. What is Hybrid OLAP?

62. What do you understand by Self Join? Explain using an example

63. What is the difference between Union and Union All operators?



64. What is a database cursor? How to use a database cursor?

65. What is the use of the INTERSECT operator?



66. How can you copy data from one table to another table?




67. What is the difference between BETWEEN and IN operators in SQL?


68. Describe how to delete duplicate rows using a single statement but without any table creation.



69. Can you identify the employee who has the third-highest salary from the given employee table (with 
70. What is the difference between HAVING and WHERE clauses?

71. Explain database white box testing and black box testing.

72. How can you create empty tables with the same structure as another table?
